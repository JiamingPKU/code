ggplot(data=aov1_d, aes(y=standresid, x=index))+geom_point()+
labs(title="Check for Independence of Errors")
plot(standresid~index, main="Check for Independence of Errors")
require(car)
qqPlot(aov1, main="QQPlot")
gg_qq(aov1$residuals) #需要先运行appendix中的自定义函数
gg_qq(aov1_d$standresid)
if(!is.null(labels)){
df$label <- ifelse(df$ord.x > df$upper | df$ord.x < df$lower, labels[ord],"")
}
gg_qq <- function(x, distribution = "norm", ..., line.estimate = NULL, conf = 0.95,
labels = names(x)){
q.function <- eval(parse(text = paste0("q", distribution)))
d.function <- eval(parse(text = paste0("d", distribution)))
x <- na.omit(x)
ord <- order(x)
n <- length(x)
P <- ppoints(length(x))
df <- data.frame(ord.x = x[ord], z = q.function(P, ...))
if(is.null(line.estimate)){
Q.x <- quantile(df$ord.x, c(0.25, 0.75))
Q.z <- q.function(c(0.25, 0.75), ...)
b <- diff(Q.x)/diff(Q.z)
coef <- c(Q.x[1] - b * Q.z[1], b)
} else {
coef <- coef(line.estimate(ord.x ~ z))
}
zz <- qnorm(1 - (1 - conf)/2)
SE <- (coef[2]/d.function(df$z)) * sqrt(P * (1 - P)/n)
fit.value <- coef[1] + coef[2] * df$z
df$upper <- fit.value + zz * SE
df$lower <- fit.value - zz * SE
if(!is.null(labels)){
df$label <- ifelse(df$ord.x > df$upper | df$ord.x < df$lower, labels[ord],"")
}
p <- ggplot(df, aes(x=z, y=ord.x)) +
geom_point() +
geom_abline(intercept = coef[1], slope = coef[2]) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha=0.2)
if(!is.null(labels)) p <- p + geom_text( aes(label = label))
print(p)
coef
}
gg_qq(aov1_d$standresid)
gg_qq(aov1$residuals) #需要先运行appendix中的自定义函数
gg_qq(aov1_d$standresid)
dffits = dffits(aov1)
dfbetas = dfbetas(aov1)
cooks = cooks.distance(aov1)
cbind(dffits, dfbetas, cooks) # get the output here
dfbetaPlots(aov1)
par(mfrow=c(1,2))
plot(dffits~index)
plot(aov1, which=c(4))
par(mfrow=c(1,1))
pairwise.t.test(h1, i7_f, p.adj="none")
pairwise.t.test(h1, i7_f, p.adj="bonf")
TukeyHSD(aov1)
plot(TukeyHSD(aov1))
detach(d1)
sink()
getwd()
getwd()
far = read.csv(""F:\\data\\FAR_Finidx.csv"")
far = read.csv("F:\\data\\FAR_Finidx.csv")
far = read.csv("F:\\data\\FAR_Finidx.csv")
far = read.table("F:\\data\\FAR_Finidx.csv")
far = read.table("F:\\data\\FAR_Finidx.csv")
far = read.table("F:\\data\\far.csv")
View(far)
far = read.table("F:\\data\\far.csv", seq=",")
far = read.table("F:\\data\\far.csv", sep=",")
names(far)
far = read.table("F:\\data\\far.csv", sep=",", header=TRUE)
names(far)
beta = read.table("F:\\data\\beta.csv")
names(beta)
beta = read.table("F:\\data\\beta.csv",seq=",", header=TRUE)
beta = read.table("F:\\data\\beta.csv",sep=",", header=TRUE)
names(beta)
summary(far$Accper)
typeof(far$Accper)
year = as.Date(far$Accper,c("%y/%m/%d, %y"))
summary(year)
rm(year)
year = as.Date(far$Accper,"%y/%m/%d")
summary(year)
year = as.Date(far$Accper,"%Y/%m/%d")
summary(year)
table(year)
year = year(year)
year = years(year)
year = format(year, format="%y")
table(year)
far = year
far = read.table("F:\\data\\far.csv", sep=",", header=TRUE)
names(far)
far = year + far
far$year = as.Date(far$Accper,"%Y/%m/%d")
far$year = format(year, format="%y")
table(far$year)
rename(far, c("A100000"="asset"))
??rename
library(reshape)
library(reshape)
rename(far, c("A100000"="asset"))
names(far)
rename(far, c(A100000="asset", B110101="income", D100000="cashflow", T30100="alratio"))
names(far)
far1 <- rename(far, c(A100000="asset", B110101="income", D100000="cashflow", T30100="alratio"))
names(far)
names(far1)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
names(far1)
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram()
hist(far1$Etaxrt)
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram()
summary(far1$Etaxrt)
library(car)
install.packages("car")
library(car)
qqplot(far1$Etaxrt)
install.packages("Hmisc")
library(Hmisc)
install.packages(mice)
library("mice")
library(mice)
install.packages("mice")
library(mice)
boxplot(far1$Etaxrt)
ggplot(data=far1, aes(x=Etaxrt)) + geom_boxplot()
ggplot(data=far1, aes(group=Etaxrt)) + geom_boxplot()
boxplot(far1$Etaxrt)
sp_Etaxrt = boxplot(far1$Etaxrt)
sp_Etaxrt = boxplot(far1$Etaxrt, title="实际税率异常值检验")
sp_Etaxrt
boxplot(far1$Etaxrt, title="实际税率异常值检验")
sp_Etaxrt = boxplot(far1$Etaxrt, main="实际税率异常值检验")
sp_Etaxrt$out
?boxplot
sp_Etaxrt$out[976]
far1$Etaxrt[976]
far1$Etaxrt[975]
far1$Etaxrt[974]
outlier = boxplot.stats(far1$Etaxrt)$out
outlier
-17.815014 %in% far1$Etaxrt
test = (abs(far1$Etaxrt) > 1)
table(test)
test = (far1$Etaxrt < 0)
table(test)
test = (far1$Etaxrt < -1);table(test)
test = (far1$Etaxrt < -5);table(test)
test = (far1$Etaxrt > 10);table(test)
winsor1 <- function (x, fraction=.05)
{
if(length(fraction) != 1 || fraction < 0 ||
fraction > 0.5) {
stop("bad value for 'fraction'")
}
lim <- quantile(x, probs=c(fraction, 1-fraction))
x[ x < lim[1] ] <- lim[1]
x[ x > lim[2] ] <- lim[2]
x
}
winsor1(far1$Etaxrt, fraction=.05)
winsor1(far1$Etaxrt, fraction=.05)
rm(winsor1())
rm(winsor1)
winsor <- function (x, fraction=.05)
{
if(length(fraction) != 1 || fraction < 0 ||
fraction > 0.5) {
stop("bad value for 'fraction'")
}
lim <- quantile(x, probs=c(fraction, 1-fraction))
x[ x < lim[1] ] <- NA
x[ x > lim[2] ] <- NA
return x
}
winsor <- function (x, fraction=.05)
{
if(length(fraction) != 1 || fraction < 0 ||
fraction > 0.5) {
stop("bad value for 'fraction'")
}
lim <- quantile(x, probs=c(fraction, 1-fraction))
x[ x < lim[1] ] <- NA
x[ x > lim[2] ] <- NA
return x
}
if(length(fraction) != 1 || fraction < 0 || fraction > 0.5){
stop("bad value for 'fraction'")
}
winsor <- function (x, fraction=.05)
{
if(length(fraction) != 1 || fraction < 0 || fraction > 0.5){
stop("bad value for 'fraction'")
}
lim <- quantile(x, probs=c(fraction, 1-fraction))
x[ x < lim[1] ] <- NA
x[ x > lim[2] ] <- NA
return(x)
}
winsor1(far1$Etaxrt, fraction=.05)
winsor(far1$Etaxrt, fraction=.05)
quantiles(far1$Etaxrt)
quantile(far1$Etaxrt, probs=c(0.05, 0.95))
quantile(far1$Etaxrt, probs=c(0.05, 0.95), na.rm=TRUE)
winsor <- function (x, fraction=.05)
{
if(length(fraction) != 1 || fraction < 0 || fraction > 0.5){
stop("bad value for 'fraction'")
}
lim <- quantile(x, probs=c(fraction, 1-fraction), na.rm=TRUE)
x[ x < lim[1] ] <- NA
x[ x > lim[2] ] <- NA
return(x)
}
winsor(far1$Etaxrt, fraction=.005)
hist(far1$Etaxrt)
tax = winsor(far1$Etaxrt, fraction=.005)
hist(tax)
quantile(far1$Etaxrt, probs = c(0.005,0.095))
quantile(far1$Etaxrt, probs = c(0.005,0.095), na.rm=TRUE)
quantile(far1$Etaxrt, probs = c(0.005,0.995), na.rm=TRUE)
far1$Etaxrt <- winsor(far1$Etaxrt, fraction = 0.005)
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram()
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram() + labs(title="实际税率分布")
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram()
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram() + facet_grid(year)
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram() + facet_grid(year)
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram()
getwd()
far = read.table("F:\\data\\far.csv", sep=",", header=TRUE)
names(far)
table(far$Accper)
year <- as.Date(far$Accper, "%Y/%m/%d")
year <- format(year, "%y")
table(far$year)
table(far$year)
rm(year)
far$year <- as.Date(far$Accper, "%Y/%m/%d")
far$year <- format(far$year, "%y")
table(far$year)
table(far$year)
getwd()
far = read.table("F:\\data\\far.csv", sep=",", header=TRUE)
names(far)
table(far$Accper)
far$year <- as.Date(far$Accper, "%Y/%m/%d")
far$year <- format(far$year, "%y")
table(far$year)
beta = read.table("F:\\data\\beta.csv",sep=",", header=TRUE)
names(beta)
table(beta$Trddt)
library(ggplot2)
ggplot(data=far, aes(x=Etaxrt)) + geom_histogram()
quantile(far$Etaxrt, probs = c(0.005,0.995), na.rm=TRUE)
far1 <- far
far1$Etaxrt <- winsor(far1$Etaxrt, fraction = 0.005)
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram()+
labs(x="实际税率",y="数量")
winsor <- function (x, fraction=.05)
{
if(length(fraction) != 1 || fraction < 0 || fraction > 0.5){
stop("bad value for 'fraction'")
}
lim <- quantile(x, probs=c(fraction, 1-fraction), na.rm=TRUE)
x[ x < lim[1] ] <- NA
x[ x > lim[2] ] <- NA
return(x)
}
far1$Etaxrt <- winsor(far1$Etaxrt, fraction = 0.005)
ggplot(data=far1, aes(x=Etaxrt)) + geom_histogram()+
labs(x="实际税率",y="数量")
ggplot(data=far1, aes(x=Etaxrt, fill=year)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(~year~.)
ggplot(data=far1, aes(x=Etaxrt, fill=year)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far1, aes(x=Etaxrt)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far1, aes(x=Etaxrt, color=year)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far1, aes(x=Etaxrtr)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far1, aes(x=Etaxrt)) + geom_density()+
labs(x="实际税率",y="数量")
library(dplyr)
far15 <- far %>% filter(year=15)
far15 <- far %>% filter(year==15)
table(far15$year)
ggplot(data=far15, aes(x=Etaxrt)) + geom_density() + labs(x="实际汇率", y ="数量")
far15 <- far1 %>% filter(year==15)
table(far15$year)
ggplot(data=far15, aes(x=Etaxrt)) + geom_density() + labs(x="实际汇率", y ="数量")
ggplot(data=far15, aes(x=Etaxrt, fill)) + geom_density() + labs(x="实际汇率", y ="数量")
ggplot(data=far15, aes(x=Etaxrt, fill=year)) + geom_density() + labs(x="实际汇率", y ="数量")
ggplot(data=far15, aes(x=Etaxrt, fill=year)) + geom_density() + labs(x="实际汇率", y ="数量", title="2015年")
far15$tax = 1
far15$tax = 2 which(far15$Etaxrt >0.3)
ggplot(data=far15, aes(x=Etaxrt, fill=year)) + geom_density() + labs(x="实际税率", y ="数量", title="2015年")
TRUE+TRUE
far15$tax <- (far15$Etaxrt>-0.05) + (far15$Etaxrt > 0.05) + (far15$Etaxrt >0.1)+
(far15$Etaxrt>0.2)+(far15$Etaxrt>0.3)
table(far15$tax)
far15$tax <- (far15$Etaxrt>-0.05) + (far15$Etaxrt >0.1)+(far15$Etaxrt>0.2)+(far15$Etaxrt>0.3)
table(far15$tax)
ggplot(data=far1, aes(x=Etaxrt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=Etaxrt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=Etaxrt, color=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=Etaxrt, color=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(tax~)
ggplot(data=far15, aes(x=Etaxrt, color=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(tax~.)
tax <- as.factor(tax)
far15$tax <- as.factor(far15$tax)
table(far15$tax)
ggplot(data=far1, aes(x=Etaxrt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(~year~.)
ggplot(data=far15, aes(x=Etaxrt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(~year~.)
ggplot(data=far15, aes(x=A100000, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(~year~.)
ggplot(data=far15, aes(x=T30100, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(~year~.)
ggplot(data=far15, aes(x=T30100, color=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(~year~.)
ggplot(data=far15, aes(x=Etaxrt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=T30100, color=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=T30100, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=T30100, fill=tax),na.omit=TRUE) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=T30100, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(tax~.)
far15 <- na.omit(tax)
x <- na.omit(far15$tax)
rm(x)
far15 <- far15 %>% !is.na(far15$tax)
far15 <- far15 %>% (!is.na(far15$tax))
far15 <- far15 %>% (not is.na(far15$tax))
far15 <- far15 %>% (1-is.na(far15$tax))
far15$check = !is.na(far15$tax)
table(far15$check)
far15 <- far15 %>% check
far15 <- far15 %>% check==TRUE
far15 <- far15 %>% (check==TRUE)
far15 <- far15 %>% filter(far15$tax != NA)
far15 <- far15 %>% filter(! is.na(tax))
far15 <- far1 %>% filter(year==15)
table(far15$year)
far15 <- far15 %>% filter(! is.na(tax))
far15$tax <- (far15$Etaxrt>-0.05) + (far15$Etaxrt >0.1)+(far15$Etaxrt>0.2)+(far15$Etaxrt>0.3)
far15 <- far15 %>% filter(! is.na(tax))
table(far15$tax)
far15$tax <- as.factor(far15$tax)
ggplot(data=far15, aes(x=Etaxrt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=T30100, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(taxss~.)
ggplot(data=far15, aes(x=T30100, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(tax~.)
far15 <- rename(far15, c("T30100"="debt","T40700"="mr","T60300"="pstk"))
?rename
library("dplyr")
far15 <- rename(far15, c("T30100"="debt","T40700"="mr","T60300"="pstk"))
far15 <- rename(far15, c("T30100"="debt"))
library("reshape")
far15 <- rename(far15, c("T30100"="debt","T40700"="mr","T60300"="pstk"))
far15$debt <- winsor(far15$debt, fraction = 0.005)
ggplot(data=far15, aes(x=debt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=debt, color=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=debt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=debt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=debt, y=Etaxrt))+geom_point()
ggplot(data=far15, aes(x=debt, y=mr,color=tax))+
geom_point()
far15$mr <- winsor(far15$mr, fraction = 0.005)
far15$pstk <- winsor(far15$pstk, fraction = 0.005)
ggplot(data=far15, aes(x=debt, y=mr,color=tax))+
geom_point()
ggplot(data=far15, aes(x=debt, y=Etaxrt))+
geom_point()
ggplot(data=far15, aes(x=mr, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=debt, fill=tax)) + geom_density()+
labs(x="资产负债率",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=mr, fill=tax))+geom_density()+
labs(x="边际利润率",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=pstk, fill=tax))+geom_density()+
labs(x="每股净资产",y="数量")+facet_grid(tax~.)
cor(far15$debt,far15$mr)
cor.test(far15$debt,far15$mr)
cor.test(far15$debt,far15$Etaxrt)
cor.test(far15$debt,far15$tax)
attach(far15)
lm(Etaxrt~debt+mr+pstk)
detach()
far15$tax = far15$tax+1
far15 <- far1 %>% filter(year==15)
table(far15$year)
far15$tax <- (far15$Etaxrt>-0.05) + (far15$Etaxrt >0.1)+(far15$Etaxrt>0.2)+(far15$Etaxrt>0.3)
far15$tax = far15$tax+1
far15 <- far15 %>% filter(! is.na(tax))
table(far15$tax)
ggplot(data=far15, aes(x=Etaxrt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
library("dplyr")
library("reshape")
library("reshape")
far15 <- rename(far15, c("T30100"="debt","T40700"="mr","T60300"="pstk"))
far15$debt <- winsor(far15$debt, fraction = 0.005)
far15$mr <- winsor(far15$mr, fraction = 0.005)
far15$pstk <- winsor(far15$pstk, fraction = 0.005)
ggplot(data=far15, aes(x=debt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
far15$tax <- as.factor(far15$tax)
ggplot(data=far15, aes(x=debt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量")
ggplot(data=far15, aes(x=debt, fill=tax)) + geom_density()+
labs(x="实际税率",y="数量") + facet_grid(tax~.)
ggplot(data=far15, aes(x=debt, fill=tax)) + geom_density()+
labs(x="资产负债率",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=debt, fill=tax)) + geom_density()+
labs(x="资产负债率",y="数量",title="2015年")+facet_grid(tax~.)
ggplot(data=far15, aes(x=mr, fill=tax))+geom_density()+
labs(x="边际利润率",y="数量")+facet_grid(tax~.)
far15$mr <- winsor(far15$mr, fraction = 0.01)
ggplot(data=far15, aes(x=mr, fill=tax))+geom_density()+
labs(x="边际利润率",y="数量")+facet_grid(tax~.)
far15$mr <- winsor(far15$mr, fraction = 0.05)
ggplot(data=far15, aes(x=mr, fill=tax))+geom_density()+
labs(x="边际利润率",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=pstk, fill=tax))+geom_density()+
labs(x="每股净资产",y="数量")+facet_grid(tax~.)
far15 <- rename(far15, c("A100000"="asset"))
far15$asset <- log(far15$asset)
hist(far15$asset)
ggplot(data=far15, aes(x=asset, fill=tax))+geom_density()+
labs(x="每股净资产",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=Etaxrt, y=asset))+geom_point()
ggplot(data=far15, aes(x=Etaxrt, y=mr, color=tax))+geom_point()
ggplot(data=far15, aes(x=asset, y=mr, color=tax))+geom_point()
cor.test(far15$asset,far15$Etaxrt)
ggplot(data=far15, aes(x=asset))+geom_density()
ggplot(data=far15, aes(x=B110101 , y=mr, color=tax))+geom_point()
ggplot(data=far15, aes(x=B110101 , y=mr, color=tax))+geom_point()
ggplot(data=far15, aes(x=B110101 ))+geom_density()
ggplot(data=far15, aes(x=log(B110101) ))+geom_density()
anova(debt~tax)
attach(far15)
anova(debt~tax)
detach
detach()
ggplot(data=far15, aes(x=Nstaff, y=mr, color=tax))+geom_point()
ggplot(data=far15, aes(x=Nstaff, fill=tax))+geom_density()+
labs(x="总资产",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=log(Nstaff), fill=tax))+geom_density()+
labs(x="总资产",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=T60200 , fill=tax))+geom_density()+
labs(x="总资产",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=log(T60200 ), fill=tax))+geom_density()+
labs(x="总资产",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=log(T60200 ), fill=tax))+geom_density()+
labs(x="每股收益的对数",y="数量")+facet_grid(tax~.)
ggplot(data=far15, aes(x=log(T60200 ), fill=tax))+geom_density()+
labs(x="每股收益的对数",y="密度")+facet_grid(tax~.)
ggplot(data=far15, aes(x=log(T60200 ), fill=tax))+geom_density()+
labs(x="每股收益的对数",y="密度",title="2015年")+facet_grid(tax~.)
ggplot(data=far15, aes(x=T60200 ,y=debt))+geom_point()
ggplot(data=far15, aes(x=log(T60200) ,y=debt))+geom_point()
ggplot(data=far15, aes(x=log(T60200) ,y=log(debt))+geom_point()
##使用Winsorizing 方法
## source: r-bloggers-Winsorization
winsor <- function (x, fraction=.05)
{
if(length(fraction) != 1 || fraction < 0 || fraction > 0.5){
stop("bad value for 'fraction'")
}
lim <- quantile(x, probs=c(fraction, 1-fraction), na.rm=TRUE)
x[ x < lim[1] ] <- NA
x[ x > lim[2] ] <- NA
return(x)
}
ggplot(data=far15, aes(x=log(T60200) ,y=log(debt))+geom_point()
##使用Winsorizing 方法
## source: r-bloggers-Winsorization
winsor <- function (x, fraction=.05)
{
if(length(fraction) != 1 || fraction < 0 || fraction > 0.5){
stop("bad value for 'fraction'")
}
lim <- quantile(x, probs=c(fraction, 1-fraction), na.rm=TRUE)
x[ x < lim[1] ] <- NA
x[ x > lim[2] ] <- NA
return(x)
}
ggplot(data=far15, aes(x=log(T60200) ,y=log(debt)))+geom_point()
ggplot(data=far15, aes(x=log(T60200 ), fill=tax))+geom_density()+
labs(x="每股收益的对数",y="密度",title="2015年")+facet_grid(tax~.)
