ggplot(data=d1, aes(x=h1))+geom_histogram()+
labs(title="Distribution of Degree of Satisfaction with Development",x="Degree of Satisfaction")
tapply(h1, i7, mean)
tapply(h1, i7, sd)
aov1 <- aov(h1~ i7_f)
summary(aov1)
ggplot(data=d1, aes(x=h1))+geom_histogram()+
labs(title="Distribution of Degree of Satisfaction with Development",x="Degree of Satisfaction")
require(ggplot2)
ggplot(data=d1, aes(x=h1))+geom_histogram()+
labs(title="Distribution of Degree of Satisfaction with Development",x="Degree of Satisfaction")
h1_norm <- h1^3
table(i7_f);
require(ggplot2)
ggplot(data=d1, aes(x=h1^3))+geom_histogram()+
labs(title="Distribution of Cube of Degree of Satisfaction",x="Cube of Degree")
jarqueberaTest(h1)
jarqueberaTest(h1^3) # the result is greater than 0.05, meaning that it can be treated as a normal distribution
tapply(h1^3, i7, mean)
tapply(h1^3, i7, sd)
aov1_2 <- aov(h1^3~ i7_f) # anova1 version2
summary(aov1_2)
standresid <- rstandard(aov1_2)
aov1_2_d <- data.frame(standresid, aov1_2$fitted)
ggplot(data=aov1_2_d,aes(y=standresid, x=aov1_2.fitted))+geom_point()+
labs(title="Check for Constant Error Variance")
n=dim(d1)[1]
index=seq(1:n)
aov1_2_d <- data.frame(aov1_2_d, index)
ggplot(data=aov1_2_d, aes(y=standresid, x=index))+geom_point()+
labs(title="Check for Independence of Errors")
aov1_2 <- aov(h1^3~ i7_f) # anova1 version2
summary(aov1_2)
ggplot(data=aov1_2_d,aes(y=standresid, x=aov1_2.fitted))+geom_point()+
labs(title="Check for Constant Error Variance")
ggplot(data=aov1_2_d, aes(y=standresid, x=index))+geom_point()+
labs(title="Check for Independence of Errors")
ggplot(data=aov1_2_d, aes(y=standresid, x=index))+geom_line()
require(car)
gg_qq(aov1_2_d$standresid)#需要先运行appendix中的自定义函数
require(car)
qqPlot(aov1_2, main="QQPlot")
gg_qq(aov1_2_d$standresid)#需要先运行appendix中的自定义函数
dffits = dffits(aov1_2)
dfbetas = dfbetas(aov1_2)
cooks = cooks.distance(aov1_2)
cbind(dffits, dfbetas, cooks) # get the output here
dfbetaPlots(aov1_2)
par(mfrow=c(1,2))
plot(dffits~index)
plot(aov1_2, which=c(4))
par(mfrow=c(1,1))
dfbetaPlots(aov1_2)
par(mfrow=c(1,2))
help("dfbetaPlots")
plot(dffits~index)
plot(aov1_2, which=c(4))
par(mfrow=c(1,2))
plot(dffits~index)
plot(aov1_2, which=c(4))
help("pairwise.prop.test")
help("pairwise.t.test")
help("TukeyHSD")
getwd()
setwd("F:\\code\\R\\")
sink(file="pro2.txt")
sink()
library(haven)
csdps <- read_dta("F:/data/CSDPS.dta", encoding="UTF-8")
require(dplyr)
d1 <- filter(csdps, ! is.na(csdps$i7)) #remove observations if i7 is missing
d1 <- filter(d1, ! is.na(d1$h1)) #remove observations if h1 is missing
d1 <- filter(d1, ! is.na(d1$h2)) #remove observations if h2 is missing
d1 <- filter(d1, ! is.na(d1$a23)) #remove observations if a23 is missing
attach(d1)
i7_f <- factor(i7, ordered=TRUE) #change i7 into an ordered factor variable
table(i7_f);
help(auto.arima)
library(tseries)
help(auto.arima)
??auto.arima
getwd()
x=c("readxl","TSA","forecast", "FinTS","e1071","fGarch")
lapply(x, require, character.only = T)
getwd()
x=c("readxl","TSA","forecast", "FinTS","e1071","fGarch","MTS", "urca", "dynlm")
lapply(x, require, character.only = T)
rm(list=ls())
data2 <- read_excel("API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
data2 <- read_excel("F:\\data\\ts\\API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
fof = ts(data2[2], frequency = 4,start = c(2007,1),names = 'fof')
FinTS.stats(retire)
FinTS.stats(fof)
GR_retire = diff(log(retire))
GR_fof = diff(log(fof))
par(mfrow=c(2,1))
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
title("Time Trends of Retire and FOF in Last 10 Years")
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(GR_retire, GR_fof, col=rainbow(8))
title("Growth Rates of Retire and FOF in Last 10 years")
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
rm(list=ls())
data2 <- read_excel("F:\\data\\ts\\API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
fof = ts(data2[2], frequency = 4,start = c(2007,1),names = 'fof')
FinTS.stats(retire)
FinTS.stats(fof)
GR_retire = diff(log(retire))
GR_fof = diff(log(fof))
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
title("Time Trends of Retire and FOF in Last 10 Years")
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(GR_retire, GR_fof, col=rainbow(8))
title("Growth Rates of Retire and FOF in Last 10 years")
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="Year", ylab="Number" ))
title("Time Trends of Retire and FOF in Last 10 Years")
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(GR_retire, GR_fof, col=rainbow(8), gpars = list(xlab="Year", ylab="Growth Rate")
title("Growth Rates of Retire and FOF in Last 10 years")
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
ts.plot(GR_retire, GR_fof, col=rainbow(8), gpars = list(xlab="Year", ylab="Growth Rate")
title("Growth Rates of Retire and FOF in Last 10 years")
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
ts.plot(GR_retire, GR_fof, col=rainbow(8), gpars = list(xlab="Year", ylab="Growth Rate"))
title("Growth Rates of Retire and FOF in Last 10 years")
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
summary(ur.df(retire, lags = 3)) # 不拒绝
summary(ur.kpss(retire)) #拒绝
summary(ur.pp(retire)) # 不拒绝 （临界值附近）
summary(ur.df(retire, lags = 3)) # 不拒绝
summary(ur.kpss(retire)) #拒绝
summary(ur.pp(retire)) # 不拒绝 （临界值附近）
summary(ur.kpss(retire)) #拒绝
summary(ur.df(diff(retire),lags=3)) #拒绝
summary(ur.kpss(diff(retire))) #不拒绝
summary(ur.pp(diff(retire))) #小于临界值
help(lm)
'''
#### 说明
本部分对fof和retire进行协整分析。
1. **平稳性**。fof与retire都是非平稳的，取对数后仍然非平稳。但它们的增长率都是平稳序列（对数再差分）
2. **协整建模1**。 $fof$**~ **$retire$ 。结果残差是平稳的，说明2个I(1)的过程结果得到了I(0)的过程。协整向量为(1, -0.15)。同时建立ECM方程。
3. **协整建模2**。$log(fof)$**~ **$log(retire)$ 。结果残差是平稳的。同上。协整向量为(1, -1.9)。同时建立ECM方程。
4. **协整建模3**。使用*Lecture11* 中的$ca.jo()$函数建模。结果：
1. 对fof与retire分析时不存在协整关系。
2. 对log(fof)与log(retire)分析时也不存在协整关系。
3. 对GR_fof与GR_retire分析时存在协整关系。但是这个是平稳序列。
'''
##### 导入数据####
getwd()
x=c("readxl","TSA","forecast", "FinTS","e1071","fGarch","MTS", "urca", "dynlm")
lapply(x, require, character.only = T)
rm(list=ls())
data2 <- read_excel("F:\\data\\ts\\API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
# 提取协整分析的数据，养老金和fof数量，从2007年开始
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
fof = ts(data2[2], frequency = 4,start = c(2007,1),names = 'fof')
FinTS.stats(retire)
FinTS.stats(fof)
####描述统计####
# 获得增长率
GR_retire = diff(log(retire))
GR_fof = diff(log(fof))
par(mfrow=c(2,1))
# 基数的协整关系比较复杂，不容易查看
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="Year", ylab="Number" ))
title("Time Trends of Retire and FOF in Last 10 Years")
# legend(x=2007,y=9000, c("Retire","FOF*10"), text.col = rainbow(8), bty="n")
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
# 增长率之间趋势相同，可以看出有协整关系
ts.plot(GR_retire, GR_fof, col=rainbow(8), gpars = list(xlab="Year", ylab="Growth Rate"))
title("Growth Rates of Retire and FOF in Last 10 years")
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
# ts.plot(diff(fof), diff(retire),col=rainbow(8))
####单位根检验####
# df-test/pp-test的原假设是非平稳， kpss-test的原假设是平稳
summary(ur.df(retire, lags = 3)) # 不拒绝
# adf.test(retire)
summary(ur.kpss(retire)) #拒绝
summary(ur.pp(retire)) # 不拒绝 （临界值附近）
summary(ur.df(diff(retire),lags=3)) #拒绝
summary(ur.kpss(diff(retire))) #不拒绝
summary(ur.pp(diff(retire))) #小于临界值
m1 = lm(fof~retire)
r1 <- m1$residuals
par(mfrow=c(1,1))
plot(r1, xlab = 'time (seasonal)')
print(summary(m1))
AIC(m1)
BIC(m1)
summary(ur.df(r1)) #拒绝
summary(ur.kpss(r1)) #不拒绝
summary(ur.pp(r1)) #不拒绝
getwd()
library(haven)
city <- read_dta("F:/git/stata/output/4Jun2017/city.dta", encoding = "UTF-8")
city0 <- read_dta("F:\\git\\stata\\output\\2Jun2017\\city.dta", encoding = "UTF-8")
city0 <- read_dta("F:/git/stata/output/4Jun2017/city.dta", encoding = "UTF-8")
cnplot(govsize~year|prov,type="l",data=city0)
coplot(govsize~year|prov,type="l",data=city0)
coplot(govsize~year|pref,type="l",data=city0)
coplot(govsize~year|pref,type="b",data=city0)
library(car)
rm(list=ls())
library(readxl)
library(TSA)
library(forecast)
data <- read_excel("API.xlsx", sheet = "R", col_types = c("skip", "numeric", "numeric"))
data <- read_excel("F:\\git\\R\0606\\API.xlsx", sheet = "R", col_types = c("skip", "numeric", "numeric"))
data <- read_excel("F:\\git\\R\0606\\API.xlsx", sheet = "R", col_types = c("skip", "numeric", "numeric"))
data <- read_excel("F:/git/R/0606/API.xlsx", sheet = "R", col_types = c("skip", "numeric", "numeric"))
ast = data[1] # ast represents asset
ast = ts(ast, frequency = 12,start = c(1995,1)) # total net assets
ast = data[1] # ast represents asset
plot(ast,ylab="Asset  /millions of dollars")
plot(GR_ast,ylab="GR_ast / diff(log(ast))")
ast = data[1] # ast represents asset
ast = ts(ast, frequency = 12,start = c(1995,1)) # total net assets
GR_ast = diff(log(ast)) # growth ratio of total net asset
GR_ast = ts(GR_ast * 100, frequency = 12,start = c(1995,2), names = 'GR_ast')
par(mfrow = c(2,1))
plot(ast,ylab="Asset  /millions of dollars")
plot(GR_ast,ylab="GR_ast / diff(log(ast))")
arrows(2005,60, 2002.7,76, length=.1,angle=20)
text(2005.5,59, "IO")
adf.test(ast)
adf.test(GR_ast)
par(mfrow = c(1,1))
periodogram(GR_ast)
m1=arima(GR_ast,order = c(0,0,5),fixed = c(0,0,NA,0,NA,NA))
print(m1)
r1=m1$residuals
t1=Box.test(r1, lag = 24, type = 'Ljung-Box', fitdf = 2)
t1$p.value#box检验通过！
McLeod.Li.test(y=r1)#就是对r1^2 进行很多不同阶的box检验。p-value都很大，发现没有二阶相关性！
Ad_GR_ast=GR_ast
Ad_GR_ast[90]=23#把异常值处理掉
McLeod.Li.test(y=r1)#就是对r1^2 进行很多不同阶的box检验。p-value都很大，发现没有二阶相关性！
help("McLeod.Li.test")
McLeod.Li.test(y=r1)#就是对r1^2 进行很多不同阶的box检验。p-value都很大，发现没有二阶相关性！
getwd()
x=c("readxl","TSA","forecast", "FinTS","e1071","fGarch","MTS", "urca", "dynlm")
lapply(x, require, character.only = T)
rm(list=ls())
data2 <- read_excel("API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
data2 <- read_excel("API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
getwd()
data2 <- read_excel("F:\\data\\ts\\API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
fof = ts(data2[2], frequency = 4,start = c(2007,1),names = 'fof')
FinTS.stats(retire)
FinTS.stats(fof)
GR_retire = diff(log(retire))
GR_fof = diff(log(fof))
par(mfrow=c(2,1))
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
par(mfrow=c(1,1))
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(retire, fof/0.15, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
ts.plot(retire, fof*11, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(GR_retire, GR_fof, col=rainbow(8))
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
summary(ur.df(diff(retire),lags=3)) #拒绝
adf.test(diff(retire))
getwd()
x=c("readxl","TSA","forecast", "FinTS","e1071","fGarch","MTS", "urca", "dynlm")
lapply(x, require, character.only = T)
rm(list=ls())
data2 <- read_excel("F:\\data\\ts\\API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
fof = ts(data2[2], frequency = 4,start = c(2007,1),names = 'fof')
FinTS.stats(retire)
FinTS.stats(fof)
GR_retire = diff(log(retire))
GR_fof = diff(log(fof))
par(mfrow=c(1,1))
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(GR_retire, GR_fof, col=rainbow(8))
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
ts.plot(retire*0.15, fof, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 9500, c("Retire*15%"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(retire*0.15, fof, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 9500, c("Retire*15%"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(retire*0.15, fof, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 9500, c("Retire*0.15"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF "), text.col=rainbow(8)[2], bty="n")
ts.plot(retire*0.15, fof, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 1500, c("Retire*0.15"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 600, c("FOF "), text.col=rainbow(8)[2], bty="n")
ts.plot(retire*0.15, fof, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 1800, c("Retire*0.15"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 800, c("FOF "), text.col=rainbow(8)[2], bty="n")
ts.plot(retire*0.15, fof, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 1800, c("Retire*0.15"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 900, c("FOF "), text.col=rainbow(8)[2], bty="n")
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(retire*0.15, fof, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
legend(x=2007, y= 1800, c("Retire*0.15"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 900, c("FOF"), text.col=rainbow(8)[2], bty="n")
ts.plot(GR_retire, GR_fof, col=rainbow(8))
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
getwd()
x=c("readxl","TSA","forecast", "FinTS","e1071","fGarch","MTS", "urca", "dynlm")
lapply(x, require, character.only = T)
rm(list=ls())
data2 <- read_excel("F:\\data\\ts\\API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
# 提取协整分析的数据，养老金和fof数量，从2007年开始
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
fof = ts(data2[2], frequency = 4,start = c(2007,1),names = 'fof')
FinTS.stats(retire)
FinTS.stats(fof)
# 获得增长率
GR_retire = diff(log(retire))
GR_fof = diff(log(fof))
par(mfrow=c(1,1))
# 基数的协整关系比较复杂，不容易查看
ts.plot(retire, fof*10, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
#title("Time Trends of Retire and FOF in Last 10 Years")
# legend(x=2007,y=9000, c("Retire","FOF*10"), text.col = rainbow(8), bty="n")
legend(x=2007, y= 9500, c("Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 7500, c("FOF * 10"), text.col=rainbow(8)[2], bty="n")
ts.plot(retire*0.15, fof, col = rainbow(8), gpars = list(xlab="year", ylab="number" ))
#title("Time Trends of Retire and FOF in Last 10 Years")
# legend(x=2007,y=9000, c("Retire","FOF*10"), text.col = rainbow(8), bty="n")
legend(x=2007, y= 1800, c("Retire*0.15"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 900, c("FOF"), text.col=rainbow(8)[2], bty="n")
# 增长率之间趋势相同，可以看出有协整关系
ts.plot(GR_retire, GR_fof, col=rainbow(8))
#title("Growth Rates of Retire and FOF in Last 10 years")
legend(x=2010, y= -0.05, c("the Growth Rate of Retire"), text.col=rainbow(8)[1], bty="n")
legend(x=2007, y= 0.22, c("the Growth Rate of FOF"), text.col=rainbow(8)[2], bty="n")
# ts.plot(diff(fof), diff(retire),col=rainbow(8))
# df-test/pp-test的原假设是非平稳， kpss-test的原假设是平稳
adf.test(diff(retire))
summary(ur.df(diff(retire),lags=3)) #拒绝
summary(ur.kpss(diff(retire))) #不拒绝
summary(ur.pp(diff(retire))) #小于临界值
#ADF检验，拒绝说明平稳，不拒绝说明不平稳
# adf.test(retire) #平稳
# adf.test(fof) #非平稳
# adf.test(GR_retire) #非平稳
# adf.test(GR_fof) #平稳
# adf.test(retire,alternative = 'explosive') # 不是爆炸性过程
# adf.test(fof,alternative = 'explosive') #不是爆炸性过程
# adf.test(GR_retire,alternative = 'explosive') #不是爆炸性过程
# adf.test(GR_fof,alternative = 'explosive') #不是爆炸性过程
# df-test/pp-test的原假设是非平稳， kpss-test的原假设是平稳
summary(ur.df(retire, lags = 3)) # 不拒绝
# adf.test(retire)
summary(ur.kpss(retire)) #拒绝
summary(ur.pp(retire)) # 不拒绝 （临界值附近）
summary(ur.df(log(retire),lags=3)) #不拒绝
summary(ur.kpss(log(retire))) #拒绝
summary(ur.pp(log(retire))) #不拒绝
summary(ur.df(GR_retire,lags=3)) #拒绝
summary(ur.kpss(GR_retire)) #不拒绝
summary(ur.pp(GR_retire)) #不拒绝
# df-test/pp-test的原假设是非平稳， kpss-test的原假设是平稳
# 拒绝说明平稳，不拒绝说明不平稳
summary(ur.df(fof)) #不拒绝
summary(ur.kpss(fof)) # 拒绝
summary(ur.pp(fof)) # 不拒绝
summary(ur.df(diff(fof))) #拒绝
summary(ur.kpss(diff(fof))) #不拒绝
summary(ur.pp(diff(fof))) #拒绝
summary(ur.df(log(fof),lags=3)) #不拒绝
summary(ur.kpss(log(fof))) #拒绝
summary(ur.pp(log(fof))) #不拒绝
summary(ur.df(GR_fof)) #拒绝
summary(ur.kpss(GR_fof)) #不拒绝
summary(ur.pp(GR_fof)) #拒绝
# 模型m1, 得到残差序列 r1
# m1 = fof ~ retire
m1 = lm(fof~retire)
# r1 = m1$residuals
r1 <- m1$residuals
par(mfrow=c(1,1))
plot(r1, xlab = 'time (seasonal)')
# t = adf.test(resid, alternative = 'explosive')
print(summary(m1))
# print(t)
# 对残差序列进行 单位根检验
summary(ur.df(r1)) #拒绝
summary(ur.kpss(r1)) #不拒绝
summary(ur.pp(r1)) #不拒绝
# r1 可以认为是平稳的，说明二者之间存在协整关系。
# 系数为 0.1524，则协整向量为 (1, -0.15)
# bind the data
y = diff(fof); x = diff(retire)
r <- r1[1:39]
ecmdat1 <- cbind(y,x, r)
# 建立ECM模型
# ecm1 <- dynlm(d1~  L(d1, 1) + L(d2, 1) + L(d2,0)+L(r1, 1), data = ecmdat1)
ecm1 <- dynlm(y~  L(y, 1)  +L(y,2)+L(y,3)+L(y,4)+ L(x, 1) + L(x,0)+L(r, 1), data = ecmdat1)
# ecm1 <- dynlm(d1~  L(d1, 1)  +L(d1,2)+L(d1,3)+L(d1,4)+L(r1, 1) + L(d2, 1), data = ecmdat1)
summary(ecm1)
# 对残差序列进行 单位根检验
r_ecm1 <- ecm1$residuals
summary(ur.df(r_ecm1)) #拒绝
summary(ur.kpss(r_ecm1)) #不拒绝
summary(ur.pp(r_ecm1)) #小于临界值
# 模型m2, 得到残差序列 r2
# m2 = log(fof)~ log(retire)
m2 = lm(log(fof)~log(retire))
r2 <- m2$residuals
par(mfrow=c(1,1))
plot(r2, xlab = 'time (seasonal)')
# t = adf.test(resid, alternative = 'explosive')
print(summary(m2))
# 对残差序列进行 单位根检验
summary(ur.df(r2)) #拒绝
summary(ur.kpss(r2)) #不拒绝
summary(ur.pp(r2)) #拒绝
# r2 可以认为是平稳的，说明二者之间存在协整关系。
# 系数为 1.90423 ，则协整向量为 (1, -1.9)
# bind the data
r <- r2[1:39]
y <- GR_fof
x <- GR_retire
ecmdat2 <- cbind(y,x, r)
# 建立ECM模型
ecm2 <- dynlm(GR_fof~ L(r2, 1)+ L(GR_fof, 1)  + L(GR_retire, 1) + L(GR_retire,0), data = ecmdat2)
ecm2 <- dynlm(y~ L(y,1) + L(y,2) + L(y,3) + L(y,4)+ L(x, 0) + L(x,1) + L(r, 1), data= ecmdat2 )
summary(ecm2)
# 对残差序列进行 单位根检验
r_ecm2 <- ecm2$residuals
summary(ur.df(r_ecm2)) #拒绝
summary(ur.kpss(r_ecm2)) #不拒绝
summary(ur.pp(r_ecm2)) #小于临界值
d1 = GR_fof
d2 = GR_retire
d = data.frame(d1,d2)
m3 = ca.jo(d, type="eigen", ecdet="none", K=2,season = 4, spec="transitory")
summary(m3)
# 协整向量
m3@V
d1 = log(fof)
d2 = log(retire)
d = data.frame(d1,d2)
m3 = ca.jo(d, type="eigen", ecdet="none", K=2,season = 4, spec="transitory")
summary(m3)
# 协整向量
m3@V
source('~/.active-rstudio-document', encoding = 'UTF-8')
getwd()
getwd()
x=c("readxl","TSA","forecast", "FinTS","e1071","fGarch","MTS", "urca", "dynlm")
lapply(x, require, character.only = T)
rm(list=ls())
data2 <- read_excel("F:\\data\\ts\\API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
# 提取协整分析的数据，养老金和fof数量，从2007年开始
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
fof = ts(data2[2], frequency = 4,start = c(2007,1),names = 'fof')
# 描述性统计
FinTS.stats(retire)
FinTS.stats(fof)
GR_retire = diff(log(retire))
GR_fof = diff(log(fof))
m1 = lm(fof~retire)
print(summary(m1))
print(summary(m1))
source('F:/git/R/0606/sweave2.Rnw', encoding = 'UTF-8')
getwd()
x=c("readxl","TSA","forecast", "FinTS","e1071","fGarch","MTS", "urca", "dynlm")
lapply(x, require, character.only = T)
rm(list=ls())
data2 <- read_excel("F:\\data\\ts\\API.xlsx", sheet = "RR", col_types = c("skip", "skip", "skip", "skip", "numeric", "numeric", "skip"))
# 提取协整分析的数据，养老金和fof数量，从2007年开始
retire = ts(data2[1], frequency = 4,start = c(2007,1),names = 'retire')
fof = ts(data2[2], frequency = 4,start = c(2007,1),names = 'fof')
# 描述性统计
FinTS.stats(retire)
FinTS.stats(fof)
FinTS.stats(retire)
<<>>=
FinTS.stats(fof)
@
